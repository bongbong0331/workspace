

JSP & Servlet

인터넷을 사용할 수 있는 컴퓨터는 물리적인 선으로 모두 연결 되어 있다.

Request와 Response의 개념 

사용자 ->서버 요청 = Request
서버 -> 사용자 = Response

웹 프로그램의 동작 원리

동적 데이터 = 웹 컨테이너

https://velog.io/@ds02168/1%EA%B0%95-%EC%9B%B9-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EA%B0%9C%EC%9A%94

---------------------------------------------------------------------------------------------



JSP & Servlet - 개발 환경 설정


JDK 가 먼저 설치 되어 있어야 한다.

환경 변수 설정 확인.

웹 개발 가능한 Eclipse IDE EE 버전이 설치 되어 있어야 한다.

웹 서버 + 웹 Container 가 필요 하다 . --> apache TomCat 9.0 버전 설치 


EE버전 환경설정 방법 기억


JSP & Servlet - 웹 컨테이너 기본

웹 컨테이너는 WAS ( Web Application Server ) 라고 한다. 

xxx.JSP 파일에서 --> 
웹 컨테이너 --> 
xxx_jsp.java (자바 파일로 변환한다) -->
xxx_jsp.class (컴퓨터가 이해하는 기계어로 변환된다) -->
xxx_jsp.obj (VM) --> 
HTML 파일로 변환 응답 ( 변환 되는 과정은 MIME TYPE ) , JSON, text/plan




JSP 파일 생성
webapp 폴더 안에 기본적으로 생성 - 파일 생성시 대 소문자를 크게 상관하지 않는다.
권장 사항은 소문자


웹 컨테이너 동작 살펴 보기

index_jsp.java 파일로 변환 --> 컴파일 과정 진행 --> index_jsp.class 변환이 된다 --> VM 동작할 수 있게 index_jsp.obj 로 변환이 된다. --> MIME TYPE 을 확인해서 응답처리(html) 


페이지 소스 보기를 하면 응답 후 자바 코드를 확인할 수 없다.


웹 컨테이너가 생성한 .class 파일 확인하기


모든 파일을 하나의 폴더에 작성하는 것은 좋은 방법이 아니다. home 폴더를 만들고 그 아래 home.jsp 파일을 생성해서 컨텐츠를 꾸미고 url 방식으로 요청해보자. 
루트 컨텍스트 개념 (루트경로) ㅡ 폴더 ㅡ 자원
URL 방식으로 서버에게 무언가 요청해서 응답을 받았다.

-------------------------------------


JSP & Servlet - Servlet(기본)

서블릿의 개념을 이해하자 !!
이전 까지 배웠던 방식은 .jsp 파일 사용하여 동적인 데이터를 만들어 내는 방법을 학습했다.
이번에는 통칭 servlet 이라는 순수 자바코드만을 작성하여 요청 및 응답을 처리하는 코딩을 배워보자

.jsp 파일과 조금 다른 동작을 확인해 보자.

서블릿 파일 생성하기

url 맵핑 방식을 이해하자
	1. @WebServlet("/ms1") 어노테이션을 활용한 방법


1. xxx.java  파일과 xxx.class 파일이 어디에 생성 되었는지 확인하고 경로를 적어 주세요
2. 순수 자바코드인 서블릿을 이용해서 json 형식으로 데이터를 리턴해 보자
